import numpy as np
import pandas as pd
import yfinance as yf
from matplotlib import pyplot as plt

#原etf報酬
etf_o_return={'05/19': [0.29], '05/18': [1.33], '05/17': [1.64], '05/16': [1.19], '05/15': [0.0], '05/12': [-0.3], '05/11': [-0.21], '05/10': [-0.93], '05/09': [0.3], '05/08': [0.64], '05/05': [0.26], '05/04': [0.26], '05/03': [-0.42], '05/02': [0.26], '04/28': [1.21], '04/27': [-0.09], '04/26': [-0.43], '04/25': [-1.31], '04/24': [-0.38], '04/21': [-0.25], '04/20': [-0.13], '04/19': [-0.75], '04/18': [-0.33], '04/17': [-0.25], '04/14': [0.96], '04/13': [-0.87], '04/12': [-0.25], '04/11': [-0.12], '04/10': [0.0], '04/07': [0.0], '04/06': [-0.49], '03/31': [0.33], '03/30': [0.5], '03/29': [0.17], '03/28': [-0.86], '03/27': [-0.61], '03/24': [0.29], '03/23': [0.79], '03/22': [1.9], '03/21': [0.47], '03/20': [-0.71], '03/17': [1.62], '03/16': [-0.47], '03/15': [0.09], '03/14': [-1.09], '03/13': [0.42], '03/10': [-1.58], '03/09': [-0.08], '03/08': [-0.82], '03/07': [0.66], '03/06': [0.96], '03/03': [0.08], '03/02': [-0.08], '03/01': [0.46], '02/24': [-0.5], '02/23': [1.49], '02/22': [-1.09], '02/21': [-0.04], '02/20': [0.21]}
df_etf_daily=pd.DataFrame(etf_o_return)
df_etf_daily=df_etf_daily.transpose()
df_etf_daily = df_etf_daily.iloc[::-1]
df_etf_daily.rename(columns={0 : 'return'}, inplace=True)
df_etf_daily.iloc[0,0]=0
# print(df_etf_daily)

value = 1

for i in range(len(df_etf_daily)):
    dr=df_etf_daily.iloc[i,0]/100+1
    value= value*dr
    df_etf_daily.iloc[i, 0] = value

    # print(value)
print(df_etf_daily)

#優化etf報酬

etf_n_return={'date': ['0518', '0517', '0516', '0515', '0512', '0511', '0510', '0509', '0508', '0505', '0504', '0503', '0502', '0428', '0427', '0426', '0425', '0424', '0421', '0420', '0419', '0418', '0417', '0414', '0413', '0412', '0411', '0410', '0407', '0406', '0331', '0330', '0329', '0328', '0327', '0324', '0323', '0322', '0321', '0320', '0317', '0316', '0315', '0314', '0313', '0310', '0309', '0308', '0307', '0306', '0303', '0302', '0301', '0224', '0223', '0222', '0221', '0220'], 'return': [-0.00019126833965665228, 0.0028929202892888297, 0.003652436862301374, 8.059486325252125e-05, -0.005533586719938326, -0.000945530207060179, -0.005233974299005618, -0.0016162999532808439, 0.0002387103360819695, 0.0023399883908979966, 0.0063718839678967186, -0.00471808853476943, 0.0003269426024270003, 0.002708417829417845, 0.0017749869491488234, 0.005489254981042846, -0.00516064910186014, 0.001995249876893514, 0.0017008835402142451, -0.002148336273913415, -0.005681077693668978, -0.0005502463984954979, -0.0018217221904077807, 0.003489449319145715, 0.0011522306355261991, -0.0029315355907770083, 0.006878870560142308, 0.00834849279311081, -0.0034369630329560553, 0.003972687658718552, 0.0013595724560761858, -0.0022786779574597064, 0.005667176415569458, 0.000731846073565073, 0.0019927215153425675, -0.00020426926899625862, 0.002459488349320227, 0.005573266128193313, 0.0026037161682086114, -0.006650728747889167, -0.004151078869510375, 0.0009158221809891909, 0.000425818267496961, -0.006157230777659923, 0.00102625888892192, -0.010015766188547477, -0.0043108711120834415, -0.002157518304712412, 0.002526409024797423, 0.0038073979356982143, 0.002193483981646444, 0.0031837547618496875, -0.003956487819891666, -0.003644387361985661, 0.001702806634598836, 0.0006355372033620383, 0.0023774717881946857], 'price': [21.837009429701958, 22.029379842809277, 21.570825366923273, 21.39674299882344, 21.27256220297832, 21.55677814598301, 21.614357125511177, 21.77913034098429, 21.88113572019629, 21.872004825926517, 21.819925346195326, 21.32495507918312, 21.441938013313333, 21.67265169503223, 21.53832884472552, 21.653247436527707, 21.10308075106272, 21.26784139268139, 21.091021493494445, 20.922699400373723, 21.12469522627518, 21.561627880283247, 21.558520022345057, 21.390234463238457, 21.08772126062921, 20.924174875945397, 21.022662744858543, 20.5418090571181, 19.867265913851654, 19.951364885336723, 19.656066710253867, 19.726903751195806, 19.661554957993218, 19.355209347271327, 19.417392424387216, 19.23629684589271, 19.108019326420866, 18.88762066006624, 18.577340280068647, 18.670110595425562, 18.623259871360666, 18.65339082350591, 18.541243222441345, 18.311970330836928, 18.62529833306531, 18.345170524271957, 18.80663135119753, 19.086254045822486, 18.97972794790735, 18.86911297478894, 18.49875968865311, 18.23325636330472, 17.71036387517359, 18.072314817485037, 18.250531912905856, 18.081879405834123, 17.902793639491115, 17.820060227994496]}
df_daily_r=pd.DataFrame.from_dict(etf_n_return, orient='index')
df_daily_r = df_daily_r.transpose()
# df_daily_r=pd.DataFrame(etf_n_return)
del(df_daily_r['price'])
df_daily_r.fillna(0, inplace=True)
df_daily_r.set_index('date', inplace=True)
df_daily_r = df_daily_r.iloc[::-1]
# print(df_daily_r)
value = 1

for i in range(len(df_daily_r)):
    dr=df_daily_r.iloc[i,0]+1
    value= value*dr
    df_daily_r.iloc[i,0] = value

    # print(value)
print(df_daily_r)


backtesting = pd.concat([df_etf_daily,df_daily_r],axis=1)

backtesting.plot()
